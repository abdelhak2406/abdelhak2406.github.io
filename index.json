[{"content":"","date":"7 January 2024","permalink":"/","section":"Abdelhak's website!","summary":"","title":"Abdelhak's website!"},{"content":" Link to my resume (in french)\n","date":"7 January 2024","permalink":"/about/","section":"Abdelhak's website!","summary":"Link to my resume (in french)","title":"About"},{"content":"","date":"7 January 2024","permalink":"/tags/linux/","section":"Tags","summary":"","title":"linux"},{"content":"General # adduser user_name: add a new user useradd : another type of commend! What\u0026rsquo;s the difference between the two? cat /etc/passwd : display the list of the users deluser user_name : delete a user passwd user_name: change passworld for the user Every file created by a user is automatically owned by it\u0026rsquo;s primary group That can be files that are owned by secondary groups too! addgroup group_name : create a new group usermod -a -G group_name user_name : add user to a group! (we can do -aG directly) groups username : check who are the groups that a user belongs to gpasswd -d username group_name : delete user from a group delgroup groupname : delete a group Groups # A collection of user that have the same privileges\nusers have a \u0026ldquo;primary\u0026rdquo; and a \u0026ldquo;secondary\u0026rdquo; group, by default when we create a user it\u0026rsquo;s gonna greate a group with the same name as the user, and add the user into it! and this is the \u0026ldquo;primary group\u0026rdquo; We have 1 primary group and up to 15 secondary groups cat /etc/group All permissions for groups are inside a sudoers file find out where this file is! to modify this file we do visudo we just follow what the comments say and to add permission for a user to add some command, we need to put the full path! LinuxTv way # sudo useradd username : to create a new user!\nif we check /etc/passwd in general IDs from 1000 and above are user related and below are system related sudo useradd -m username: create a user and create home directory for him\nsudo useradd -r username: create a system user\nsystem user is a user that generally runs stuff in the background ect! /etc/default/useradd : contains the defulat for useradd command\nif you wanna change the default alter this file! sudo userdel username: delete a user\nthis doesnt imply that the home directory of the user gets deleted! sudo userdel -r username : delete user AND the HOME directory\npasswd username : change the password of the user!\nWho are the users that are in the system?\ncheck the /home directory , but it\u0026rsquo;s not effective sometimes it\u0026rsquo;s not! better check the /etc/passwd file! each user has it\u0026rsquo;s own line each line is kindof like this : username‚ùåUserID:GroupID: UserInformationField:home_directory:shell_of_user x : essencially means that the password is hashed!(it\u0026rsquo;s a cary over from the old days) UserInformationField: genrally contains the first and last time, it\u0026rsquo;s OPTIONAL shell_of_user: the shell that\u0026rsquo;s gonna startup! /etc/shadow : file that contains the hashed password and other information at the enc ::howmanydays:howmany_days_is_required:how many days the user will be prompted! continue explaining this! Group managment # https://linuxhandbook.com/group-management/\nEvery file is owned by a user and a group\ngroups check what groups the current user are a part of\ngroups username groups that the user belong to.\nsudo groupadd group_name: add group\nsudo groupdel group_name: delete group\nusermod -aG group_name user_name: add user to group\nusermode -g group_name user_name: change the user\u0026rsquo;s primary group!\nDONT DO IT, its just too much work and no one does it gpasswd -a username group_name : add user to group (another way)\n/etc/groups:\nsimilar to /etc/passwd but for groups there is several groupName:group_password:GID:user_members group_password: should apparently not be used because it\u0026rsquo;s not secure somehow he went into /etc/ssh/sshd_config : and added users that are allowed to enter thourgh ssh!\nhe add a line to demonstrate a usercase of using groups there are 2 types of group\nprimary group and secondary group to check the primary group of the user go the toe passwd file and grab the GID check the /etc/group and search for the GID What\u0026rsquo;s the difference between primary and secondary group?\nNOTHING! SKEL directory # In Linux and other Unix-like operating systems, \u0026ldquo;skel\u0026rdquo; is short for \u0026ldquo;skeleton\u0026rdquo;. It is used to refer to the directory /etc/skel, which contains a set of default files and directories that are copied to a new user\u0026rsquo;s home directory when the user is created.\nThe purpose of the skel directory is to provide a set of default settings, files, and directories for new users, so that they start with a basic working environment. The contents of the skel directory are typically customized by the system administrator to match the needs and preferences of the organization or system.\nSome of the files and directories that may be included in the /etc/skel directory are:\n.bashrc - a configuration file for the Bash shell .bash_profile - a script that runs when the user logs in .profile - a shell initialization file that is read by various shells .config/ - a directory for user-specific configuration files .ssh/ - a directory for SSH configuration files and keys .vimrc - a configuration file for the Vim text editor When a new user is created, the contents of the skel directory are copied to the user\u0026rsquo;s home directory and become the basis for the user\u0026rsquo;s initial environment.\nuseradd VS adduser # Both useradd and adduser are commands used to create new users in Linux and other Unix-like operating systems, but they have some differences in their default behavior and options.\nuseradd is a low-level command that is typically used by system administrators to create new users from the command line. It requires a number of options and arguments to specify the user\u0026rsquo;s details, such as username, user ID (UID), home directory, shell, and so on. By default, useradd does not create a home directory, set a password, or create any default configuration files for the new user. The administrator needs to manually specify these options or run additional commands to set them up.\nOn the other hand, adduser is a higher-level command that provides a more user-friendly interface for creating new users. It prompts the administrator for the user\u0026rsquo;s details, such as name, password, home directory, and so on, and automatically creates a home directory, sets a default shell, and creates some default configuration files for the new user. adduser is designed to make the process of creating new users easier and more intuitive for non-expert users or for use cases where the administrator wants to create a user quickly with reasonable defaults.\nIn general, useradd is more suitable for use cases where the administrator wants complete control over the user\u0026rsquo;s details and configuration, and is comfortable with specifying all the options manually. adduser, on the other hand, is more suitable for use cases where the administrator wants a simpler, more intuitive interface for creating new users, and is willing to rely on the default settings and options provided by the command.\nect/sudoers and visudo # visudo command is used to edit the /etc/sudoers file, which contains the configuration settings for the sudo command. The visudo command is designed to prevent accidental or malicious errors in the sudoers file by checking the syntax and preventing simultaneous edits by multiple users.\nThe visudo command opens the sudoers file in a text editor, typically vi or vim, and allows the administrator to make changes to the file. When the administrator saves and exits the editor, visudo checks the syntax of the sudoers file and alerts the user if any errors are found.\nThe sudoers file is located in the /etc/ directory, and is usually only editable by the root user or by users with sudo privileges. Therefore, the full path to the sudoers file is /etc/sudoers.\nIt is important to note that the sudoers file should only be edited using the visudo command, as making manual edits to the file can easily result in syntax errors or security vulnerabilities that could compromise the system.\n","date":"7 January 2024","permalink":"/posts/manage-users-linux/","section":"Posts","summary":"General # adduser user_name: add a new user useradd : another type of commend!","title":"Mange users in linux"},{"content":"","date":"7 January 2024","permalink":"/posts/","section":"Posts","summary":"","title":"Posts"},{"content":"","date":"7 January 2024","permalink":"/tags/","section":"Tags","summary":"","title":"Tags"},{"content":"Git related # https://docs.gitea.io/en-us/ gitlab.com https://codeberg.org/ https://sourcehut.org/ https://git.disroot.org/ ( https://disroot.org/en) so let\u0026rsquo;s talk about disroot for a second, they have a ton of services for example share file encryped create a file that you can collaborate on , ect AND NO you dont always need an account! https://github.com/MichaelMure/git-bug https://github.com/jmforsythe/Git-Heat-Map https://github.com/arxanas/git-branchless https://github.com/initialcommit-com/git-sim (mac) https://github.com/gitx/gitx https://docs.gitstream.cm/ https://initialcommit.com Ai related # jupytext Cast # https://fcast.org/ Pdf readers # https://pwmt.org/projects/zathura/ productivity # https://logseq.com/ coding : # https://github.com/eranif/codelite ","date":"14 August 2023","permalink":"/awesome-websites/","section":"Abdelhak's website!","summary":"Git related # https://docs.","title":"Awesome Websites"},{"content":"","date":"1 January 0001","permalink":"/authors/","section":"Authors","summary":"","title":"Authors"},{"content":"","date":"1 January 0001","permalink":"/categories/","section":"Categories","summary":"","title":"Categories"},{"content":"","date":"1 January 0001","permalink":"/series/","section":"Series","summary":"","title":"Series"}]